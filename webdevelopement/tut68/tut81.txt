//Inserting data in mongodb
use harsh
db.items.insertOne({ name: "Samsung30s", price: 222000, rating: 4.5, qty: 233, sold: 98 })
db.items.insertMany([{ name: "Samsung30s", price: 222000, rating: 4.5, qty: 233, sold: 98 }, { name: "Motos", price: 22000, rating: 3.5, qty: 500, sold: 200 }])
//tut81.txt
// Searching for data in mongo db
use harryKart

// This query will return all the objects with rating equal to 3.5
db.items.find({ rating: 3.5 })
db.items.find({ rating: { $gte: 3.5 } })
db.items.find({ rating: { $gt: 3.5 } })
// And operator
db.items.find({ rating: { $gt: 3.5 }, price: { $gt: 4000 } })

db.items.find({ rating: { $lt: 3.5 }, price: { $gt: 114000 } })

db.items.find({
    $or: [{ rating: { $lt: 3.5 } }, { price: { $gt: 114000 } }]
})

db.items.find({ rating: { $gt: 3.5 } }, { rating: 1 })

//tut82
show dbs
use harryKart
show collections

db.items.find({ price: 22000 })

// Deleting items from the Mongo Database
db.items.deleteOne({ price: 22000 })
// deleteOne will delete the matching document entry and will delete the first entry in case of multi document match
db.items.deleteMany({ price: 129000 })


//tut83
show dbs
use harryKart
show collections

db.items.find()
db.items.updateOne({ name: "Moto 30s" }, { $set: { price: 2 } })
db.items.find()
db.items.updateMany({ name: "Moto 30s" }, { $set: { price: 3, rating: 1 } })

